// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2019 The Bitcoin Core developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#ifndef BITCOIN_CHAINPARAMS_H
#define BITCOIN_CHAINPARAMS_H

#include <chainparamsbase.h>
#include <consensus/params.h>
#include <primitives/block.h>
#include <protocol.h>
#include <libethashseal/GenesisInfo.h>

#include <memory>
#include <vector>
#include <string>

struct SeedSpec6 {
    uint8_t addr[16];
    uint16_t port;
};

typedef std::map<int, uint256> MapCheckpoints;

struct CCheckpointData {
    MapCheckpoints mapCheckpoints;
};

/**
 * Holds various statistics on transactions within a chain. Used to estimate
 * verification progress during chain sync.
 *
 * See also: CChainParams::TxData, GuessVerificationProgress.
 */
struct ChainTxData {
    int64_t nTime;    //!< UNIX timestamp of last known number of transactions
    int64_t nTxCount; //!< total number of transactions between genesis and that timestamp
    double dTxRate;   //!< estimated number of transactions per second after that timestamp
};

const std::string DELEGATIONS_CONTRACT_CODE="6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b5061257c806100606000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d4f442321161005b578063d4f44232146100ff578063e19b8c8c14610130578063ea2bf8671461014e578063f7c89ba01461017e57610088565b80634c15f7881461008d5780638da5cb5b146100a9578063cd258bad146100c7578063d160abf5146100e3575b600080fd5b6100a760048036038101906100a29190611a15565b61019a565b005b6100b1610380565b6040516100be9190611aaf565b60405180910390f35b6100e160048036038101906100dc9190611aca565b6103a4565b005b6100fd60048036038101906100f89190611c60565b61073c565b005b61011960048036038101906101149190611d07565b61093a565b604051610127929190611e9a565b60405180910390f35b610138610bfa565b6040516101459190611ee3565b60405180910390f35b61016860048036038101906101639190611d07565b610c00565b6040516101759190611efe565b60405180910390f35b61019860048036038101906101939190611f58565b611443565b005b3273ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90612011565b60405180910390fd5b6102318361150e565b15610271576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102689061207d565b60405180910390fd5b8160028460405161028291906120d9565b908152602001604051809103902060000190805190602001906102a69291906117ba565b50806002846040516102b891906120d9565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060028460405161031991906120d9565b908152602001604051809103902060010160146101000a81548160ff021916908315150217905550600160028460405161035391906120d9565b908152602001604051809103902060010160156101000a81548160ff021916908315150217905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803273ffffffffffffffffffffffffffffffffffffffff166002826040516103cc91906120d9565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044b9061213c565b60405180910390fd5b61045d89611557565b1561049d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610494906121a8565b60405180910390fd5b600015156104aa8361150e565b15151480156104c55750600015156104c18361158f565b1515145b15610505576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fc90612214565b60405180910390fd5b8660038a60405161051691906120d9565b9081526020016040518091039020600101908051906020019061053a9291906117ba565b508760038a60405161054c91906120d9565b908152602001604051809103902060000190805190602001906105709291906117ba565b508160038a60405161058291906120d9565b908152602001604051809103902060020190805190602001906105a69291906117ba565b508560038a6040516105b891906120d9565b908152602001604051809103902060030190805190602001906105dc9291906117ba565b508460038a6040516105ee91906120d9565b908152602001604051809103902060040190805190602001906106129291906117ba565b508360038a60405161062491906120d9565b908152602001604051809103902060050190805190602001906106489291906117ba565b504260038a60405161065a91906120d9565b9081526020016040518091039020600601819055508260038a60405161068091906120d9565b908152602001604051809103902060070190805190602001906106a49291906117ba565b50600160038a6040516106b791906120d9565b908152602001604051809103902060090160006101000a81548160ff021916908315150217905550600160038a6040516106f191906120d9565b908152602001604051809103902060090160016101000a81548160ff0219169083151502179055506001600081548092919061072c90612263565b9190505550505050505050505050565b8281600115156107f560038460405161075591906120d9565b90815260200160405180910390206002018054610771906122db565b80601f016020809104026020016040519081016040528092919081815260200182805461079d906122db565b80156107ea5780601f106107bf576101008083540402835291602001916107ea565b820191906000526020600020905b8154815290600101906020018083116107cd57829003601f168201915b5050505050836115d8565b151514610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e90612359565b60405180910390fd5b6000151561084486611557565b15151415610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e906121a8565b60405180910390fd5b6000151560038660405161089b91906120d9565b908152602001604051809103902060090160009054906101000a900460ff16151514156108fd5760006003866040516108d491906120d9565b908152602001604051809103902060090160006101000a81548160ff0219169083151502179055505b8360038660405161090e91906120d9565b908152602001604051809103902060080190805190602001906109329291906117ba565b505050505050565b6060600080151561094a8461150e565b1515141561098d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610984906123c5565b60405180910390fd5b6000600367ffffffffffffffff8111156109aa576109a961188c565b5b6040519080825280602002602001820160405280156109dd57816020015b60608152602001906001900390816109c85790505b50905083816000815181106109f5576109f46123e5565b5b6020026020010181905250600284604051610a1091906120d9565b90815260200160405180910390206000018054610a2c906122db565b80601f0160208091040260200160405190810160405280929190818152602001828054610a58906122db565b8015610aa55780601f10610a7a57610100808354040283529160200191610aa5565b820191906000526020600020905b815481529060010190602001808311610a8857829003601f168201915b505050505081600181518110610abe57610abd6123e5565b5b6020026020010181905250600284604051610ad991906120d9565b908152602001604051809103902060010160149054906101000a900460ff1615610b57576040518060400160405280600481526020017f747275650000000000000000000000000000000000000000000000000000000081525081600281518110610b4757610b466123e5565b5b6020026020010181905250610bad565b6040518060400160405280600581526020017f66616c736500000000000000000000000000000000000000000000000000000081525081600281518110610ba157610ba06123e5565b5b60200260200101819052505b80600285604051610bbe91906120d9565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250925050915091565b60015481565b606060001515610c0f83611557565b15151415610c52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c49906121a8565b60405180910390fd5b6000600b67ffffffffffffffff811115610c6f57610c6e61188c565b5b604051908082528060200260200182016040528015610ca257816020015b6060815260200190600190039081610c8d5790505b5090508281600081518110610cba57610cb96123e5565b5b6020026020010181905250600383604051610cd591906120d9565b90815260200160405180910390206001018054610cf1906122db565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1d906122db565b8015610d6a5780601f10610d3f57610100808354040283529160200191610d6a565b820191906000526020600020905b815481529060010190602001808311610d4d57829003601f168201915b505050505081600181518110610d8357610d826123e5565b5b6020026020010181905250600383604051610d9e91906120d9565b90815260200160405180910390206002018054610dba906122db565b80601f0160208091040260200160405190810160405280929190818152602001828054610de6906122db565b8015610e335780601f10610e0857610100808354040283529160200191610e33565b820191906000526020600020905b815481529060010190602001808311610e1657829003601f168201915b505050505081600281518110610e4c57610e4b6123e5565b5b6020026020010181905250600383604051610e6791906120d9565b90815260200160405180910390206000018054610e83906122db565b80601f0160208091040260200160405190810160405280929190818152602001828054610eaf906122db565b8015610efc5780601f10610ed157610100808354040283529160200191610efc565b820191906000526020600020905b815481529060010190602001808311610edf57829003601f168201915b505050505081600381518110610f1557610f146123e5565b5b6020026020010181905250600383604051610f3091906120d9565b90815260200160405180910390206007018054610f4c906122db565b80601f0160208091040260200160405190810160405280929190818152602001828054610f78906122db565b8015610fc55780601f10610f9a57610100808354040283529160200191610fc5565b820191906000526020600020905b815481529060010190602001808311610fa857829003601f168201915b505050505081600481518110610fde57610fdd6123e5565b5b6020026020010181905250600383604051610ff991906120d9565b90815260200160405180910390206008018054611015906122db565b80601f0160208091040260200160405190810160405280929190818152602001828054611041906122db565b801561108e5780601f106110635761010080835404028352916020019161108e565b820191906000526020600020905b81548152906001019060200180831161107157829003601f168201915b5050505050816005815181106110a7576110a66123e5565b5b60200260200101819052506003836040516110c291906120d9565b908152602001604051809103902060090160009054906101000a900460ff1615611140576040518060400160405280600481526020017f7472756500000000000000000000000000000000000000000000000000000000815250816006815181106111305761112f6123e5565b5b6020026020010181905250611196565b6040518060400160405280600581526020017f66616c73650000000000000000000000000000000000000000000000000000008152508160068151811061118a576111896123e5565b5b60200260200101819052505b6003836040516111a691906120d9565b908152602001604051809103902060030180546111c2906122db565b80601f01602080910402602001604051908101604052809291908181526020018280546111ee906122db565b801561123b5780601f106112105761010080835404028352916020019161123b565b820191906000526020600020905b81548152906001019060200180831161121e57829003601f168201915b505050505081600781518110611254576112536123e5565b5b602002602001018190525060038360405161126f91906120d9565b9081526020016040518091039020600401805461128b906122db565b80601f01602080910402602001604051908101604052809291908181526020018280546112b7906122db565b80156113045780601f106112d957610100808354040283529160200191611304565b820191906000526020600020905b8154815290600101906020018083116112e757829003601f168201915b50505050508160088151811061131d5761131c6123e5565b5b602002602001018190525060038360405161133891906120d9565b90815260200160405180910390206005018054611354906122db565b80601f0160208091040260200160405190810160405280929190818152602001828054611380906122db565b80156113cd5780601f106113a2576101008083540402835291602001916113cd565b820191906000526020600020905b8154815290600101906020018083116113b057829003601f168201915b5050505050816009815181106113e6576113e56123e5565b5b602002602001018190525061141b60038460405161140491906120d9565b908152602001604051809103902060060154611631565b81600a8151811061142f5761142e6123e5565b5b602002602001018190525080915050919050565b3273ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c890612011565b60405180910390fd5b806002836040516114e291906120d9565b908152602001604051809103902060010160146101000a81548160ff0219169083151502179055505050565b600060028260405161152091906120d9565b908152602001604051809103902060010160159054906101000a900460ff161561154d5760019050611552565b600090505b919050565b600060038260405161156991906120d9565b908152602001604051809103902060090160019054906101000a900460ff169050919050565b60006002826040516115a191906120d9565b908152602001604051809103902060010160149054906101000a900460ff16156115ce57600190506115d3565b600090505b919050565b6000816040516020016115eb91906120d9565b604051602081830303815290604052805190602001208360405160200161161291906120d9565b6040516020818303038152906040528051906020012014905092915050565b60606000821415611679576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506117b5565b600082905060005b600082146116ab57808061169490612263565b915050600a826116a49190612443565b9150611681565b60008167ffffffffffffffff8111156116c7576116c661188c565b5b6040519080825280601f01601f1916602001820160405280156116f95781602001600182028036833780820191505090505b50905060008290505b600086146117ad576001816117179190612474565b90506000600a80886117299190612443565b61173391906124a8565b8761173e9190612474565b603061174a919061250f565b905060008160f81b905080848481518110611768576117676123e5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a886117a49190612443565b97505050611702565b819450505050505b919050565b8280546117c6906122db565b90600052602060002090601f0160209004810192826117e8576000855561182f565b82601f1061180157805160ff191683800117855561182f565b8280016001018555821561182f579182015b8281111561182e578251825591602001919060010190611813565b5b50905061183c9190611840565b5090565b5b80821115611859576000816000905550600101611841565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118c48261187b565b810181811067ffffffffffffffff821117156118e3576118e261188c565b5b80604052505050565b60006118f661185d565b905061190282826118bb565b919050565b600067ffffffffffffffff8211156119225761192161188c565b5b61192b8261187b565b9050602081019050919050565b82818337600083830152505050565b600061195a61195584611907565b6118ec565b90508281526020810184848401111561197657611975611876565b5b611981848285611938565b509392505050565b600082601f83011261199e5761199d611871565b5b81356119ae848260208601611947565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119e2826119b7565b9050919050565b6119f2816119d7565b81146119fd57600080fd5b50565b600081359050611a0f816119e9565b92915050565b600080600060608486031215611a2e57611a2d611867565b5b600084013567ffffffffffffffff811115611a4c57611a4b61186c565b5b611a5886828701611989565b935050602084013567ffffffffffffffff811115611a7957611a7861186c565b5b611a8586828701611989565b9250506040611a9686828701611a00565b9150509250925092565b611aa9816119d7565b82525050565b6000602082019050611ac46000830184611aa0565b92915050565b600080600080600080600080610100898b031215611aeb57611aea611867565b5b600089013567ffffffffffffffff811115611b0957611b0861186c565b5b611b158b828c01611989565b985050602089013567ffffffffffffffff811115611b3657611b3561186c565b5b611b428b828c01611989565b975050604089013567ffffffffffffffff811115611b6357611b6261186c565b5b611b6f8b828c01611989565b965050606089013567ffffffffffffffff811115611b9057611b8f61186c565b5b611b9c8b828c01611989565b955050608089013567ffffffffffffffff811115611bbd57611bbc61186c565b5b611bc98b828c01611989565b94505060a089013567ffffffffffffffff811115611bea57611be961186c565b5b611bf68b828c01611989565b93505060c089013567ffffffffffffffff811115611c1757611c1661186c565b5b611c238b828c01611989565b92505060e089013567ffffffffffffffff811115611c4457611c4361186c565b5b611c508b828c01611989565b9150509295985092959890939650565b600080600060608486031215611c7957611c78611867565b5b600084013567ffffffffffffffff811115611c9757611c9661186c565b5b611ca386828701611989565b935050602084013567ffffffffffffffff811115611cc457611cc361186c565b5b611cd086828701611989565b925050604084013567ffffffffffffffff811115611cf157611cf061186c565b5b611cfd86828701611989565b9150509250925092565b600060208284031215611d1d57611d1c611867565b5b600082013567ffffffffffffffff811115611d3b57611d3a61186c565b5b611d4784828501611989565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611db6578082015181840152602081019050611d9b565b83811115611dc5576000848401525b50505050565b6000611dd682611d7c565b611de08185611d87565b9350611df0818560208601611d98565b611df98161187b565b840191505092915050565b6000611e108383611dcb565b905092915050565b6000602082019050919050565b6000611e3082611d50565b611e3a8185611d5b565b935083602082028501611e4c85611d6c565b8060005b85811015611e885784840389528151611e698582611e04565b9450611e7483611e18565b925060208a01995050600181019050611e50565b50829750879550505050505092915050565b60006040820190508181036000830152611eb48185611e25565b9050611ec36020830184611aa0565b9392505050565b6000819050919050565b611edd81611eca565b82525050565b6000602082019050611ef86000830184611ed4565b92915050565b60006020820190508181036000830152611f188184611e25565b905092915050565b60008115159050919050565b611f3581611f20565b8114611f4057600080fd5b50565b600081359050611f5281611f2c565b92915050565b60008060408385031215611f6f57611f6e611867565b5b600083013567ffffffffffffffff811115611f8d57611f8c61186c565b5b611f9985828601611989565b9250506020611faa85828601611f43565b9150509250929050565b600082825260208201905092915050565b7f4e6f7420636f6e7472616374206f776e65720000000000000000000000000000600082015250565b6000611ffb601283611fb4565b915061200682611fc5565b602082019050919050565b6000602082019050818103600083015261202a81611fee565b9050919050565b7f4f505f4558495354530000000000000000000000000000000000000000000000600082015250565b6000612067600983611fb4565b915061207282612031565b602082019050919050565b600060208201905081810360008301526120968161205a565b9050919050565b600081905092915050565b60006120b382611d7c565b6120bd818561209d565b93506120cd818560208601611d98565b80840191505092915050565b60006120e582846120a8565b915081905092915050565b7f4e6f74206e6f74617279206f70657261746f7200000000000000000000000000600082015250565b6000612126601383611fb4565b9150612131826120f0565b602082019050919050565b6000602082019050818103600083015261215581612119565b9050919050565b7f4352545f45584953545300000000000000000000000000000000000000000000600082015250565b6000612192600a83611fb4565b915061219d8261215c565b602082019050919050565b600060208201905081810360008301526121c181612185565b9050919050565b7f4f505f4552520000000000000000000000000000000000000000000000000000600082015250565b60006121fe600683611fb4565b9150612209826121c8565b602082019050919050565b6000602082019050818103600083015261222d816121f1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061226e82611eca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156122a1576122a0612234565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806122f357607f821691505b60208210811415612307576123066122ac565b5b50919050565b7f4e6f7420696e697469616c206e6f74617279206f70657261746f720000000000600082015250565b6000612343601b83611fb4565b915061234e8261230d565b602082019050919050565b6000602082019050818103600083015261237281612336565b9050919050565b7f4f505f4558495354000000000000000000000000000000000000000000000000600082015250565b60006123af600883611fb4565b91506123ba82612379565b602082019050919050565b600060208201905081810360008301526123de816123a2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061244e82611eca565b915061245983611eca565b92508261246957612468612414565b5b828204905092915050565b600061247f82611eca565b915061248a83611eca565b92508282101561249d5761249c612234565b5b828203905092915050565b60006124b382611eca565b91506124be83611eca565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124f7576124f6612234565b5b828202905092915050565b600060ff82169050919050565b600061251a82612502565b915061252583612502565b92508260ff0382111561253b5761253a612234565b5b82820190509291505056fea26469706673582212200fc44a859af0c418df3f50cfef9fe8a49e63f43abfbaca5709619273f1a3401164736f6c634300080b0033";

/**
 * CChainParams defines various tweakable parameters of a given instance of the
 * Bitcoin system. There are three: the main network on which people trade goods
 * and services, the public test network which gets reset from time to time and
 * a regression test mode which is intended for private networks only. It has
 * minimal difficulty to ensure that blocks can be found instantly.
 */
class CChainParams
{
public:
    enum Base58Type {
        PUBKEY_ADDRESS,
        SCRIPT_ADDRESS,
        SECRET_KEY,
        EXT_PUBLIC_KEY,
        EXT_SECRET_KEY,

        MAX_BASE58_TYPES
    };

    const Consensus::Params& GetConsensus() const { return consensus; }
    const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }
    int GetDefaultPort() const { return nDefaultPort; }

    const CBlock& GenesisBlock() const { return genesis; }
    /** Default value for -checkmempool and -checkblockindex argument */
    bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }
    /** Policy: Filter transactions that do not match well-defined patterns */
    bool RequireStandard() const { return fRequireStandard; }
    /** If this chain is exclusively used for testing */
    bool IsTestChain() const { return m_is_test_chain; }
    /** If this chain allows time to be mocked */
    bool IsMockableChain() const { return m_is_mockable_chain; }
    uint64_t PruneAfterHeight() const { return nPruneAfterHeight; }
    /** Minimum free space (in GB) needed for data directory */
    uint64_t AssumedBlockchainSize() const { return m_assumed_blockchain_size; }
    /** Minimum free space (in GB) needed for data directory when pruned; Does not include prune target*/
    uint64_t AssumedChainStateSize() const { return m_assumed_chain_state_size; }
    /** Whether it is possible to mine blocks on demand (no retargeting) */
    bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }
    /** Return the network string */
    std::string NetworkIDString() const { return strNetworkID; }
    /** Return the list of hostnames to look up for DNS seeds */
    const std::vector<std::string>& DNSSeeds() const { return vSeeds; }
    const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }
    const std::string& Bech32HRP() const { return bech32_hrp; }
    const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }
    const CCheckpointData& Checkpoints() const { return checkpointData; }
    const ChainTxData& TxData() const { return chainTxData; }
    std::string EVMGenesisInfo() const;
    std::string EVMGenesisInfo(int nHeight) const;
    void UpdateOpSenderBlockHeight(int nHeight);
    void UpdateBtcEcrecoverBlockHeight(int nHeight);
    void UpdateConstantinopleBlockHeight(int nHeight);
    void UpdateDifficultyChangeBlockHeight(int nHeight);
    void UpdateOfflineStakingBlockHeight(int nHeight);
    void UpdateDelegationsAddress(const uint160& address);
    void UpdateLastMPoSBlockHeight(int nHeight);
    void UpdateReduceBlocktimeHeight(int nHeight);
    void UpdatePowAllowMinDifficultyBlocks(bool fValue);
    void UpdatePowNoRetargeting(bool fValue);
    void UpdatePoSNoRetargeting(bool fValue);
    void UpdateMuirGlacierHeight(int nHeight);
protected:
    dev::eth::Network GetEVMNetwork() const;
    CChainParams() {}

    Consensus::Params consensus;
    CMessageHeader::MessageStartChars pchMessageStart;
    int nDefaultPort;
    uint64_t nPruneAfterHeight;
    uint64_t m_assumed_blockchain_size;
    uint64_t m_assumed_chain_state_size;
    std::vector<std::string> vSeeds;
    std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];
    std::string bech32_hrp;
    std::string strNetworkID;
    CBlock genesis;
    std::vector<SeedSpec6> vFixedSeeds;
    bool fDefaultConsistencyChecks;
    bool fRequireStandard;
    bool fMineBlocksOnDemand;
    bool m_is_test_chain;
    bool m_is_mockable_chain;
    CCheckpointData checkpointData;
    ChainTxData chainTxData;
};

/**
 * Creates and returns a std::unique_ptr<CChainParams> of the chosen chain.
 * @returns a CChainParams* of the chosen chain.
 * @throws a std::runtime_error if the chain is not supported.
 */
std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain);

/**
 * Return the currently selected parameters. This won't change after app
 * startup, except for unit tests.
 */
const CChainParams &Params();

/**
 * Sets the params returned by Params() to those for the given chain name.
 * @throws std::runtime_error when the chain is not supported.
 */
void SelectParams(const std::string& chain);

/**
 * Allows modifying the Op Sender block height regtest parameter.
 */
void UpdateOpSenderBlockHeight(int nHeight);

/**
 * Allows modifying the btc_ecrecover block height regtest parameter.
 */
void UpdateBtcEcrecoverBlockHeight(int nHeight);

/**
 * Allows modifying the constantinople block height regtest parameter.
 */
void UpdateConstantinopleBlockHeight(int nHeight);

/**
 * Allows modifying the difficulty change block height regtest parameter.
 */
void UpdateDifficultyChangeBlockHeight(int nHeight);

/**
 * Allows modifying the offline staking block height regtest parameter.
 */
void UpdateOfflineStakingBlockHeight(int nHeight);

/**
 * Allows modifying the delegations address regtest parameter.
 */
void UpdateDelegationsAddress(const uint160& address);

/**
 * @brief UpdateLastMPoSBlockHeight Last mpos block height
 * @param nHeight Block height
 */
void UpdateLastMPoSBlockHeight(int nHeight);

/**
 * Allows modifying the reduce block time height regtest parameter.
 */
void UpdateReduceBlocktimeHeight(int nHeight);

/**
 * Allows modifying the pow allow for min difficulty blocks regtest parameter.
 */
void UpdatePowAllowMinDifficultyBlocks(bool fValue);

/**
 * Allows modifying the pow no retargeting regtest parameter.
 */
void UpdatePowNoRetargeting(bool fValue);

/**
 * Allows modifying the pos no retargeting regtest parameter.
 */
void UpdatePoSNoRetargeting(bool fValue);

/**
 * Allows modifying the muir glacier block height regtest parameter.
 */
void UpdateMuirGlacierHeight(int nHeight);

#endif // BITCOIN_CHAINPARAMS_H
